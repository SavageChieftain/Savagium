/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$setPrefixes', '$upcase', '$===', '$to_i', '$checkRoll', '$roll', '$collect', '$split', '$each', '$<=', '$+', '$*']);
  return (function($base, $super) {
    function $Airgetlamh(){};
    var self = $Airgetlamh = $klass($base, $super, 'Airgetlamh', $Airgetlamh);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_8;

    def.sortType = nil;
    self.$setPrefixes(["\\d+AL\\d+(x|\\*)\\d+"]);

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      return self.sortType = 1;
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "朱の孤塔のエアゲトラム";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "Airgetlamh";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "・命中判定\n[n]AL[X]*[p]：「n」で連射数を指定、「X」で目標値を指定、「p」で威力を指定。\n「*」は「x」でも代用化。\n例：3AL7*5 → 3連射で目標値7、威力5、5AL5x3 → 5連射で目標値5、威力3\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$rollDiceCommand', TMP_5 = function $$rollDiceCommand(command) {
      var $a, self = this, output = nil, $case = nil, rapid = nil, target = nil, damage = nil;

      output = (function() {$case = command.$upcase();if (/(\d+)AL(\d+)(x|\*)(\d+)$/i['$===']($case)) {rapid = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$to_i();
      target = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$to_i();
      damage = (($a = $gvars['~']) === nil ? nil : $a['$[]'](4)).$to_i();
      return self.$checkRoll(rapid, target, damage);}else {return nil}})();
      return output;
    }, TMP_5.$$arity = 1);

    return (Opal.defn(self, '$checkRoll', TMP_8 = function $$checkRoll(rapid, target, damage) {
      var $a, $b, TMP_6, $c, TMP_7, self = this, dice = nil, diceText = nil, diceArray = nil, diceCount = nil, resultDamage = nil, result = nil;

      $b = self.$roll(rapid, 10, self.sortType), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b;
      diceArray = ($a = ($b = diceText.$split(/,/)).$collect, $a.$$p = (TMP_6 = function(i){var self = TMP_6.$$s || this;
if (i == null) i = nil;
      return i.$to_i()}, TMP_6.$$s = self, TMP_6.$$arity = 1, TMP_6), $a).call($b);
      diceCount = 0;
      ($a = ($c = diceArray).$each, $a.$$p = (TMP_7 = function(i){var self = TMP_7.$$s || this, $d;
if (i == null) i = nil;
      if ((($d = ($rb_le(i, target))) !== nil && $d != null && (!$d.$$is_boolean || $d == true))) {
          return diceCount = $rb_plus(diceCount, 1)
          } else {
          return nil
        }}, TMP_7.$$s = self, TMP_7.$$arity = 1, TMP_7), $a).call($c);
      resultDamage = $rb_times(diceCount, damage);
      result = "";
      result = $rb_plus(result, "(" + (rapid) + "D10<=" + (target) + ") ＞ " + (diceText) + " ＞ Success：" + (diceCount) + "*" + (damage) + " ＞ " + (resultDamage) + "ダメージ");
      return result;
    }, TMP_8.$$arity = 3), nil) && 'checkRoll';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
