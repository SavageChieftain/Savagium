/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$==', '$>=', '$debug', '$!=', '$*']);
  return (function($base, $super) {
    function $TokumeiTenkousei(){};
    var self = $TokumeiTenkousei = $klass($base, $super, 'TokumeiTenkousei', $TokumeiTenkousei);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_6;

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      self.sendMode = 2;
      self.sortType = 1;
      self.sameDiceRerollCount = 1;
      return self.sameDiceRerollType = 2;
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "特命転攻生";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "TokumeiTenkousei";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "「1の出目でEPP獲得」、判定時の「成功」「失敗」「ゾロ目で自動振り足し」を判定。\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$check_nD6', TMP_5 = function $$check_nD6(total_n, dice_n, signOfInequality, diff, dice_cnt, dice_max, n1, n_max) {
      var $a, self = this;
      if ($gvars.signOfInequality == null) $gvars.signOfInequality = nil;

      if ((($a = ($gvars.signOfInequality['$=='](">="))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        return ""
      };
      if ((($a = (diff['$==']("?"))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return ""};
      if ((($a = ($rb_ge(total_n, diff))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 成功"
        } else {
        return " ＞ 失敗"
      };
    }, TMP_5.$$arity = 8);

    return (Opal.defn(self, '$getDiceRolledAdditionalText', TMP_6 = function $$getDiceRolledAdditionalText(n1, n_max, dice_max) {
      var $a, $b, self = this, point = nil;

      self.$debug("getExtraPowerPointTextForTokumeiTenkousei n1, dice_max", n1, dice_max);
      if ((($a = (($b = (n1['$!='](0)), $b !== false && $b !== nil && $b != null ?(dice_max['$=='](6)) : $b))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        point = $rb_times(n1, 5);
        return (" ＞ " + (point) + "EPP獲得");};
      return "";
    }, TMP_6.$$arity = 3), nil) && 'getDiceRolledAdditionalText';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
