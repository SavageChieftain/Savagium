/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_le(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs <= rhs : lhs['$<='](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_divide(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$==', '$<=', '$>=', '$+', '$/', '$<']);
  return (function($base, $super) {
    function $Elric(){};
    var self = $Elric = $klass($base, $super, 'Elric', $Elric);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4;

    Opal.defn(self, '$gameName', TMP_1 = function $$gameName() {
      var self = this;

      return "エルリック！";
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_2 = function $$gameType() {
      var self = this;

      return "Elric!";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_3 = function $$getHelpMessage() {
      var self = this;

      return "貫通、クリティカル、ファンブルの自動判定を行います。\n";
    }, TMP_3.$$arity = 0);

    return (Opal.defn(self, '$check_1D100', TMP_4 = function $$check_1D100(total_n, dice_n, signOfInequality, diff, dice_cnt, dice_max, n1, n_max) {
      var $a, $b, self = this;

      if ((($a = (signOfInequality['$==']("<="))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        return ""
      };
      if ((($a = ($rb_le(total_n, 1))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 貫通"};
      if ((($a = ($rb_ge(total_n, 100))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 致命的失敗"};
      if ((($a = ($rb_le(total_n, ($rb_plus($rb_divide(diff, 5), 0.9))))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 決定的成功"};
      if ((($a = ($rb_le(total_n, diff))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 成功"};
      if ((($a = (($b = ($rb_ge(total_n, 99)), $b !== false && $b !== nil && $b != null ?($rb_lt(diff, 100)) : $b))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ 致命的失敗"};
      return " ＞ 失敗";
    }, TMP_4.$$arity = 8), nil) && 'check_1D100';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
