/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$setPrefixes']);
  return (function($base, $super) {
    function $DungeonsAndDoragons(){};
    var self = $DungeonsAndDoragons = $klass($base, $super, 'DungeonsAndDoragons', $DungeonsAndDoragons);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5;

    self.$setPrefixes(["\\d+e.*"]);

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      return ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$prefixs', TMP_2 = function $$prefixs() {
      var self = this;

      return [];
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_3 = function $$gameName() {
      var self = this;

      return "ダンジョンズ＆ドラゴンズ";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_4 = function $$gameType() {
      var self = this;

      return "DungeonsAndDoragons";
    }, TMP_4.$$arity = 0);

    return (Opal.defn(self, '$getHelpMessage', TMP_5 = function $$getHelpMessage() {
      var self = this;

      return "※このダイスボットは部屋のシステム名表示用となります。\n";
    }, TMP_5.$$arity = 0), nil) && 'getHelpMessage';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
Opal.loaded(["diceBot/DungeonsAndDoragons"]);
/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass;

  Opal.add_stubs(['$require']);
  self.$require("diceBot/DungeonsAndDoragons");
  return (function($base, $super) {
    function $Pathfinder(){};
    var self = $Pathfinder = $klass($base, $super, 'Pathfinder', $Pathfinder);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4;

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      return ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "Pathfinder";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "Pathfinder";
    }, TMP_3.$$arity = 0);

    return (Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "※このダイスボットは部屋のシステム名表示用となります。\n";
    }, TMP_4.$$arity = 0), nil) && 'getHelpMessage';
  })($scope.base, $scope.get('DungeonsAndDoragons'));
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
