/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  function $rb_lt(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs < rhs : lhs['$<'](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$setPrefixes', '$debug', '$upcase', '$checkRoll', '$empty?', '$===', '$to_i', '$roll', '$sort', '$collect', '$split', '$+', '$getModifyText', '$join', '$getCriticalResult', '$nil?', '$isFumble', '$>=', '$==', '$<', '$size', '$select', '$to_s']);
  return (function($base, $super) {
    function $StrangerOfSwordCity(){};
    var self = $StrangerOfSwordCity = $klass($base, $super, 'StrangerOfSwordCity', $StrangerOfSwordCity);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_5, TMP_7, TMP_8, TMP_10, TMP_12;

    self.$setPrefixes(["\\d+SR.*"]);

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      self.sendMode = 2;
      self.sortType = 1;
      self.d66Type = 1;
      return self.fractionType = "omit";
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "剣の街の異邦人TRPG";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "StrangerOfSwordCity";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "・判定　xSR or xSRy or xSR+y or xSR-y or xSR+y>=z\n　x=ダイス数、y=修正値(省略可、±省略時は＋として扱う)、z=難易度(省略可)\n　判定時はクリティカル、ファンブルの自動判定を行います。\n・通常のnD6ではクリティカル、ファンブルの自動判定は行いません。\n・D66ダイスあり\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$rollDiceCommand', TMP_5 = function $$rollDiceCommand(command) {
      var $a, self = this, result = nil;

      self.$debug("rollDiceCommand command", command);
      command = command.$upcase();
      result = "";
      result = self.$checkRoll(command);
      if ((($a = (result['$empty?']())) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        return result
      };
      return result;
    }, TMP_5.$$arity = 1);

    Opal.defn(self, '$checkRoll', TMP_7 = function $$checkRoll(command) {
      var $a, $b, TMP_6, self = this, result = nil, diceCount = nil, modify = nil, difficulty = nil, dice = nil, diceText = nil, diceList = nil, totalValue = nil, modifyText = nil, criticalResult = nil;

      self.$debug("checkRoll begin command", command);
      result = "";
      if ((($a = (/^(\d+)SR([\+\-]?\d+)?(>=(\d+))?$/i['$==='](command))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        return result
      };
      diceCount = (($a = $gvars['~']) === nil ? nil : $a['$[]'](1)).$to_i();
      modify = (($a = $gvars['~']) === nil ? nil : $a['$[]'](2)).$to_i();
      if ((($a = (($b = $gvars['~']) === nil ? nil : $b['$[]'](4))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        difficulty = (($a = $gvars['~']) === nil ? nil : $a['$[]'](4)).$to_i()};
      $b = self.$roll(diceCount, 6), $a = Opal.to_ary($b), dice = ($a[0] == null ? nil : $a[0]), diceText = ($a[1] == null ? nil : $a[1]), $b;
      diceList = ($a = ($b = diceText.$split(/,/)).$collect, $a.$$p = (TMP_6 = function(i){var self = TMP_6.$$s || this;
if (i == null) i = nil;
      return i.$to_i()}, TMP_6.$$s = self, TMP_6.$$arity = 1, TMP_6), $a).call($b).$sort();
      totalValue = ($rb_plus(dice, modify));
      modifyText = self.$getModifyText(modify);
      result = $rb_plus(result, "(" + (command) + ") ＞ " + (dice) + "[" + (diceList.$join(",")) + "]" + (modifyText) + " ＞ " + (totalValue));
      criticalResult = self.$getCriticalResult(diceList);
      if ((($a = criticalResult['$nil?']()) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        result = $rb_plus(result, " ＞ クリティカル(+" + (criticalResult) + "D6)");
        return result;
      };
      if ((($a = self.$isFumble(diceList, diceCount)) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        result = $rb_plus(result, " ＞ ファンブル");
        return result;};
      if ((($a = difficulty['$nil?']()) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        result = $rb_plus(result, (function() {if ((($a = ($rb_ge(totalValue, difficulty))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
          return " ＞ 成功"
          } else {
          return " ＞ 失敗"
        }; return nil; })())
      };
      return result;
    }, TMP_7.$$arity = 1);

    Opal.defn(self, '$getModifyText', TMP_8 = function $$getModifyText(modify) {
      var $a, self = this;

      if ((($a = (modify['$=='](0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return ""};
      if ((($a = $rb_lt(modify, 0)) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return "" + (modify)};
      return "+" + (modify);
    }, TMP_8.$$arity = 1);

    Opal.defn(self, '$getCriticalResult', TMP_10 = function $$getCriticalResult(diceList) {
      var $a, $b, TMP_9, self = this, dice6Count = nil;

      dice6Count = ($a = ($b = diceList).$select, $a.$$p = (TMP_9 = function(i){var self = TMP_9.$$s || this;
if (i == null) i = nil;
      return i['$=='](6)}, TMP_9.$$s = self, TMP_9.$$arity = 1, TMP_9), $a).call($b).$size();
      if ((($a = ($rb_ge(dice6Count, 2))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return dice6Count.$to_s()};
      return nil;
    }, TMP_10.$$arity = 1);

    return (Opal.defn(self, '$isFumble', TMP_12 = function $$isFumble(diceList, diceCount) {
      var $a, $b, TMP_11, self = this;

      return ($rb_ge(($a = ($b = diceList).$select, $a.$$p = (TMP_11 = function(i){var self = TMP_11.$$s || this;
if (i == null) i = nil;
      return i['$=='](1)}, TMP_11.$$s = self, TMP_11.$$arity = 1, TMP_11), $a).call($b).$size(), diceCount));
    }, TMP_12.$$arity = 2), nil) && 'isFumble';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
