/* Generated by Opal 0.10.5 */
(function(Opal) {
  function $rb_divide(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs / rhs : lhs['$/'](rhs);
  }
  function $rb_times(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs * rhs : lhs['$*'](rhs);
  }
  function $rb_ge(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs >= rhs : lhs['$>='](rhs);
  }
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, $gvars = Opal.gvars;

  Opal.add_stubs(['$=~', '$gsub', '$debug', '$/', '$*', '$>=', '$==']);
  return (function($base, $super) {
    function $ShadowRun4(){};
    var self = $ShadowRun4 = $klass($base, $super, 'ShadowRun4', $ShadowRun4);

    var def = self.$$proto, $scope = self.$$scope, TMP_1, TMP_2, TMP_3, TMP_4, TMP_6, TMP_7;

    Opal.defn(self, '$initialize', TMP_1 = function $$initialize() {
      var $a, $b, self = this, $iter = TMP_1.$$p, $yield = $iter || nil, $zuper = nil, $zuper_index = nil, $zuper_length = nil;

      TMP_1.$$p = null;
      $zuper = [];
      
      for($zuper_index = 0; $zuper_index < arguments.length; $zuper_index++) {
        $zuper[$zuper_index] = arguments[$zuper_index];
      }
      ($a = ($b = self, Opal.find_super_dispatcher(self, 'initialize', TMP_1, false)), $a.$$p = $iter, $a).apply($b, $zuper);
      self.sortType = 3;
      self.rerollNumber = 6;
      return self.defaultSuccessTarget = ">=5";
    }, TMP_1.$$arity = 0);

    Opal.defn(self, '$gameName', TMP_2 = function $$gameName() {
      var self = this;

      return "シャドウラン第４版";
    }, TMP_2.$$arity = 0);

    Opal.defn(self, '$gameType', TMP_3 = function $$gameType() {
      var self = this;

      return "ShadowRun4";
    }, TMP_3.$$arity = 0);

    Opal.defn(self, '$getHelpMessage', TMP_4 = function $$getHelpMessage() {
      var self = this;

      return "個数振り足しロール(xRn)の境界値を6にセット、バラバラロール(xBn)の目標値を5以上にセットします。\nBコマンドとRコマンド時に、グリッチの表示を行います。\n";
    }, TMP_4.$$arity = 0);

    Opal.defn(self, '$changeText', TMP_6 = function $$changeText(string) {
      var $a, $b, TMP_5, self = this;

      if ((($a = (string['$=~'](/(\d+)S6/i))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        string = ($a = ($b = string).$gsub, $a.$$p = (TMP_5 = function(){var self = TMP_5.$$s || this, $c;

        return "" + ((($c = $gvars['~']) === nil ? nil : $c['$[]'](1))) + "B6"}, TMP_5.$$s = self, TMP_5.$$arity = 0, TMP_5), $a).call($b, /(\d+)S6/i)};
      return string;
    }, TMP_6.$$arity = 1);

    return (Opal.defn(self, '$getGrichText', TMP_7 = function $$getGrichText(numberSpot1, dice_cnt_total, successCount) {
      var $a, self = this, dice_cnt_total_half = nil;

      self.$debug("getGrichText numberSpot1", numberSpot1);
      self.$debug("dice_cnt_total", dice_cnt_total);
      self.$debug("successCount", successCount);
      dice_cnt_total_half = ($rb_divide($rb_times(1.0, dice_cnt_total), 2));
      self.$debug("dice_cnt_total_half", dice_cnt_total_half);
      if ((($a = ($rb_ge(numberSpot1, dice_cnt_total_half))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        } else {
        return ""
      };
      if ((($a = (successCount['$=='](0))) !== nil && $a != null && (!$a.$$is_boolean || $a == true))) {
        return " ＞ クリティカルグリッチ"};
      return " ＞ グリッチ";
    }, TMP_7.$$arity = 3), nil) && 'getGrichText';
  })($scope.base, $scope.get('DiceBot'))
})(Opal);

/* Generated by Opal 0.10.5 */
(function(Opal) {
  var self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice;

  Opal.add_stubs(['$exit']);
  return $scope.get('Kernel').$exit()
})(Opal);
